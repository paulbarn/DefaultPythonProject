==========================================
== Python Application Development Guide ==
==========================================

November 2022

===========
= VS Code =
===========
Install VS Code (Visual Studio Code) - Not Visual Studio!

===========
= Python  =
===========
Install Python from www.python.org
Version:
    32 bit - More compatible for many users, ODBC drivers for Aspen are default 32bit
    64 bit - Only issue is that you will need 64 bit ODBC drivers whcih are on ODC File Server
    3.10.x - Good Choice, don't install the absolute latest version due to packages not all available yet
    Anaconda - Also a good choice but virtual environment is different
	
Install:
    Make sure to install in your User\AppData\Local\Programs\Python, NOT C:\ProgramFiles!
    Add Python path to your user Path Variable
        Path: Add C:\Users\pbarnett\AppData\Local\Programs\Python\Python310\Scripts  - First line
        Path: Add C:\Users\pbarnett\AppData\Local\Programs\Python\Python310          - Second line

Virtual Environments:
Use VENV Package - this is included in the base Python install
    Make the venv
        python -m venv venv
    Activate
        venv\scripts\activate.bat
    Deactivate
        venv\scripts\deactivate.bat

Managing Packages:
Use pip (which is pip3 when on Python 3)
    # list packages
        pip list

    # update pip
        python -m pip install --upgrade pip

    # install packages
        pip install wheel
        pip install pypdf2 pandas numpy cx-freeze

    # create requirements.txt
        pip freeze > requirements.txt
		
    # install from requirements.txt
        pip install -r requirements.txt
		
    # uninstall packages
        pip unistall pypdf2
		

===========
=   GIT   =
===========
Setup:
    Your git config info is stored in a file called .gitconfig
    Located usually in C:\Users\username\.gitconfig
    Git still makes master the main branch -> set Git global default to main branch
    Guthub is using main as the main branch
    Public vs Private Emails
        If you email is Private go to your Github account settings & click Emails
        Determine you Primary email address which is likely
            12345678+username@users.noreply.guthub.com
            This is the email you need to use in the config
    
    Configure your email and username for every repo
        git config --global user.name "Mona Lisa"
        git config --global user.email "YOUR_EMAIL"
        git config --global init.defaultBranch main
    Confirm
        git config --global --list, or
        git config --global user.name
        git config --global user.email
    
    Configure your email and username for single repo
        To do the following you need to be in a directory that is a local git repo
        git config user.name "Mona Lisa"
        git config user.email "YOUR_EMAIL"
    Confirm
        git config user.name
        git config user.email

Make a Local Git Repo
    Open a CMD Window or use VS Code terminal
    navigate to a directory
    git init
    You now have a local git repo on your computer
    Add files and commit them
    Make branches and merge them in
    There is no link to Gihub - the files are local only, no remote
    To link to Github remote:
    	make a new reop on Github with proper permissions (private/public, contributors?)
	copy the URL fom Github
	git remote add origin URL, where URL = https://github.com/paulbarn/network-ping.git
	git push -u origin main, now local/main tracks remote/main, do this for each branch you want to push to remote
    To create Github remote from Command Line:
    	use Github CLI to create the repo on Github from the command line but you have to install it from https://github.com/cli/cli
	
Clone a Github Repository to Local Directory:
    Three options:
        Zip     - just down load the zip file & extract, no git repo going on
        Clone   - makes a git repo on your local machine with the original repo as the remote
                - you can't push changes back to the remote unless your a contributor
                - you can make pull requests but only to update the original remote
                - you can redefine the remote to a new repo of your own but its easier to fork
        Fork    - makes a copy of the repo in YOUR Github account that you can clone to your machine
                - when you clone it you will have the forked repo that you own as the remote
                - you can push changes to your repo
                - this is the way to go if you want to use someone else's project as a base and develop something new
    
    Zip
        Download the zip package
        Extract to a directory
        Done - no repo
    Clone
        Github repo must be public or you must be a contributor
        Open a CMD Window or use VS Code terminal
        Navigate to your Python Project directory, a new directory will be created - so don't make one here
        type cd then drag the file path from the File Explorer into the CMD window
        Clone the Github repo
            type git clone https://github.com/paulbarn/DefaultPythonProject.git (to make a new dir with same name as repo)
	    type git clone https://github.com/paulbarn/DefaultPythonProject.git name (to make a new dir with named name)
            	good convention to make it similar to the repo name so you remember which repo it is
        Close the CMD window
        Right click on the new directory and select 'Open with Code'
        Open a terminal in VS Code by typing CTRL~
        At this point you have a working copy of the Github repo
        This repo has a remote whcihis the cloned Github repo
        If you own it or are a contributor, you can push changes to it
        To make it not a git repo delete the .git directory - it maybe hidden
    Fork
        Browse to github.com
        Log in
        Browse to the repo you want to fork
        Click the fork button in top right of screen
        Clone as above to a local repo
        Remote is your Github repo
        Upstream is the Original Guthib repo

Commands:
    git status
    git add --all
    git commit -m "message"

    git log --all --decorate --oneline --graph
    git log --all --decorate --oneline --graph -n 20

    git branch -vv
    git branch --list
    git branch name
    git branch -d name
    git branch -D name
    git branch -m name
    git branch -a
    git checkout branchname
	
    git fetch
    git pull
    git push
    
    git remote add origin URL, where URL = https://github.com/paulbarn/network-ping.git
    git push -u origin main
    git push -u origin dev

    git remote
    git remote -v
    git remote remove origin	
	
.gitignore File:
    Directories:
        venv/
        setup/
        old_code/
        build/app
    Specific Files
        app/setup.txt
    Patern Files
        *.csv

===========
= Publish =
===========
Build for Distribution:
    Use pip install cx-freeze to build .exe as one directory solution
        python setup.py build
    setup.py file contains the exe build instructions
    Output folder is build\...
    app.ico is an icon file - a 16x16 color bitmap image
        To make one use Word, import an image or symbol
        Make changes as desired
        Right click on image, click save as --> .png (usually 96x96)
        Use a web app/service to convert to 16x16 icon file and download the .ico file
        Example: https://image.online-convert.com/convert-to-ico
	
=============
= readme.md =
=============    
This file is in markdown language which is a lightweight HTML type of text file
It allows for formatting instructions with the text
Git uses these mostly but 
VS Code can show them with
    CTRL-SHIFT-v (right click, open preview)
